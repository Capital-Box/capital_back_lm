service: users
frameworkVersion: 4.4.x

provider:
  name: aws
  runtime: nodejs22.x
  region: us-east-2

  # Lambda Configs
  memorySize: 512
  architecture: arm64

  # Logs Configs
  logRetentionInDays: 7

  # Root API
  httpApi:
    id: ${param:ROOT_APIGATEWAY}

  # IAM role con permisos para DynamoDB
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - lambda:InvokeFunction
          Resource:
            - ${param:SAVE_AUTH_USER_FUNCTION_ARN}
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Query
            - dynamodb:Scan
          Resource:
            - !GetAtt UsersTable.Arn
            - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${UsersTable}/index/*'

  # Variables de entorno para la tabla
  environment:
    USERS_TABLE_NAME: !Ref UsersTable
    SAVE_AUTH_USER_FUNCTION: ${param:SAVE_AUTH_USER_FUNCTION}

functions:
  create:
    handler: exports/createUserFunction.handle
    events:
      - httpApi:
          path: /users/register
          method: POST

  update:
    handler: exports/updateUserFunction.handle
    events:
      - httpApi:
          path: /users/{user_id}
          method: PUT

  delete:
    handler: exports/deleteUserFunction.handle
    events:
      - httpApi:
          path: /users/{userId}
          method: DELETE

  listUsers:
    handler: exports/listUsersFunction.handle
    events:
      - httpApi:
          path: /users
          method: GET

  getUserById:
    handler: handler.getUserById
    events:
      - httpApi:
          path: /users/{user_id}
          method: GET

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: UsersTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: email
            AttributeType: S
          - AttributeName: role
            AttributeType: S
          - AttributeName: createdDate
            AttributeType: S
          - AttributeName: all
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: 'email'
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: 'role'
            KeySchema:
              - AttributeName: role
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: 'roleCreatedDate'
            KeySchema:
              - AttributeName: role
                KeyType: HASH
              - AttributeName: createdDate
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: 'allUsers'
            KeySchema:
              - AttributeName: all
                KeyType: HASH
              - AttributeName: createdDate
                KeyType: RANGE
            Projection:
              ProjectionType: ALL

build:
  esbuild:
    external:
      - 'argon2'
