service: users
frameworkVersion: 4.4.x

provider:
  name: aws
  runtime: nodejs22.x
  region: us-east-2

  # Lambda Configs
  memorySize: 512
  architecture: arm64

  # Logs Configs
  logRetentionInDays: 7

  # IAM role con permisos para DynamoDB
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Scan
          Resource: 
            - !GetAtt UsersTable.Arn

# Variables de entorno para la tabla
environment:
  USERS_TABLE_NAME: !Ref UsersTable

functions:
  create:
    handler: exports/createUserFunction.handle
    environment:
      USERS_TABLE_NAME: !Ref UsersTable
    events:
      - http:
          path: users/register
          method: post

  update:
    handler: exports/updateUserFunction.handle
    environment:
      USERS_TABLE_NAME: !Ref UsersTable
    events:
      - http:
          path: users/update/{user_id}
          method: put

  delete:
    handler: exports/deleteUserFunction.handle
    environment:
      USERS_TABLE_NAME: !Ref UsersTable
    events:
      - http:
          path: users/delete/{userId}
          method: delete

  listUsers:
    handler: exports/listUsersFunction.handle
    environment:
      USERS_TABLE_NAME: !Ref UsersTable
    events:
      - http:
          path: users/listUsers
          method: get

  getUserById:
    handler: handler.getUserById
    environment:
      USERS_TABLE_NAME: !Ref UsersTable
    events:
      - http:
          path: users/{user_id}
          method: get


resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: UsersTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: email
            AttributeType: S
          - AttributeName: role
            AttributeType: S
          - AttributeName: createdDate
            AttributeType: S
          - AttributeName: all
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: "email"
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: "role"
            KeySchema:
              - AttributeName: role
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: "roleCreatedDate"
            KeySchema:
              - AttributeName: role
                KeyType: HASH
              - AttributeName: createdDate
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: "allUsers"
            KeySchema:
              - AttributeName: all
                KeyType: HASH
              - AttributeName: createdDate
                KeyType: RANGE
            Projection:
              ProjectionType: ALL