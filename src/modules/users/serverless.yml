service: users
frameworkVersion: 4.4.x

provider:
  name: aws
  runtime: nodejs22.x
  region: us-east-2

  # Lambda Configs
  memorySize: 512
  architecture: arm64

  # Logs Configs
  logRetentionInDays: 7
  
  # IAM role
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - cognito-idp:AdminCreateUser
            - cognito-idp:AdminSetUserPassword
            - cognito-idp:AdminAddUserToGroup
            - cognito-idp:AdminInitiateAuth

          Resource:
            - !Sub arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPool}


environment:
  COGNITO_CLIENT_ID:
    Ref: UserPoolClient
  COGNITO_USER_POOL_ID:
    Ref: UserPool

resources:
  Resources:
    UserPool: 
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:service}-user-pool
        UsernameAttributes:
          - email
        AutoVerifiedAttributes:
          - email
        Policies:
          PasswordPolicy:
            MinimumLength: 6
            RequireLowercase: false
            RequireNumbers: false
            RequireSymbols: false
            RequireUppercase: false
        Schema:
          - Name: email
            Required: true
            AttributeDataType: String
            Mutable: true
          - Name: name
            Required: true
            AttributeDataType: String
            Mutable: true
          - Name: city
            AttributeDataType: String
            Mutable: true

    UserGroupAdmin:
      Type: AWS::Cognito::UserPoolGroup
      Properties:
        GroupName: ${self:service}-admin-group
        UserPoolId: !Ref UserPool

    UserGroupDriver:
      Type: AWS::Cognito::UserPoolGroup
      Properties:
        GroupName: ${self:service}-driver-group
        UserPoolId: !Ref UserPool    

    UserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ${self:service}-user-pool-client
        UserPoolId: !Ref UserPool
        GenerateSecret: false
        ExplicitAuthFlows:
          - ALLOW_ADMIN_USER_PASSWORD_AUTH
          - ALLOW_USER_PASSWORD_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH

functions:
  login:
    handler: handler.login
    environment:
      COGNITO_CLIENT_ID:
        Ref: UserPoolClient
      COGNITO_USER_POOL_ID:
        Ref: UserPool
    events:
      - http:
          path: login
          method: post

  register:
    handler: handler.register
    environment:
      COGNITO_CLIENT_ID:
        Ref: UserPoolClient
      COGNITO_USER_POOL_ID:
        Ref: UserPool
    events:
      - http:
          path: register
          method: post
